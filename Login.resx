<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>